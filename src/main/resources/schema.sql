CREATE TABLE IF NOT EXISTS PUBLIC.films (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255),
    description VARCHAR,
    release_date DATE,
    duration NUMERIC,
    age_rating VARCHAR(10)
);

CREATE TABLE IF NOT EXISTS PUBLIC.users (
    id INT AUTO_INCREMENT,
    login VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    name VARCHAR(255),
    birthday DATE,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.likes (
    id INT AUTO_INCREMENT,
    film_id INT NOT NULL,
    user_id INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT fk_film
        FOREIGN KEY (film_id) REFERENCES films (id),
    CONSTRAINT fk_user
        FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.friendship (
    id INT AUTO_INCREMENT,
    user_id INT NOT NULL,
    friend_id INT NOT NULL,
    is_confirmed BOOLEAN,
    PRIMARY KEY (id),
    CONSTRAINT fk_user_f
        FOREIGN KEY (user_id) REFERENCES users (id),
    CONSTRAINT fk_friend
        FOREIGN KEY (friend_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.genres (
    id INT AUTO_INCREMENT,
    name VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.film_genres (
    id INT AUTO_INCREMENT,
    film_id INT NOT NULL,
    genre_id INT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT fk_film_g
        FOREIGN KEY (film_id) REFERENCES films (id),
    CONSTRAINT fk_genre
        FOREIGN KEY (genre_id) REFERENCES genres (id)
);
